React Native 개발방법은 react-native cli와 expo cli로 나뉜다.
expo는 시작세팅과 배포를 도와주는 툴이다.
이 프로젝트는 expo를 이용해 진행하므로, expo-cli를 설치 한 후 'expo init SIXTEENJEONJA' 커맨드를 입력해서 시작했다.

문제가 생겼다. 실시간으로 주가를 제공해주는 API가 없다. 한국거래소에서 제공하는 API가 있었으나, 서비스 제공이 중단되었고 나머지는 유료API이다.
예상 사용자가 많은 앱이면 고민없이 유료API를 사용하겠지만, 예상 사용자가 1명이기 때문에 다른 방법을 생각해야했다.
그래서 네이버 주식(https://finance.naver.com)을 크롤링하여 실시간 주가 데이터만 가져오기로 결정했다.

작년에 만든 ReactNative기반의 날씨앱(https://github.com/SYJoe/Weather-App/tree/fea799852953ee2fc39400c2c744f41b5695c9ef)을 많이 참고하고 있다.
다시 뜯어보며 복습하려는 목적도 있고, 주가를 날씨로 표현한다는 목적이 부분 코드 재활용으로 이어지는 부분도 있어서 그렇다.

연등시간에는 스마트폰이 없어서 테스트가 불가하며 구름ide 특성상 코드의 정확한 디버깅이 불가해서, 연등시간에 짜는 코드는 거의 엉망에 가깝다.
스마트폰 사용시간이 여유로운 주말이나 휴일을 이용해서 그 엉망인 코드를 제대로 된 코드로 고치고 있다.

기존에 계획했던 삼성전자의 현재가와 전일가를 불러와서 출력하고, 비교값을 통해 효과를 출력하는 단계까지는 완성했다.
하지만 추가적으로 삼성전자 외의 다른 주식들도 리스트를 만들어 출력하고, 선택하여 그 주식들도 동일한 효과를 출력할 수 있게 하고 싶었다.
이를 해결하려면 기존에 있었던 API문제를 해결해야하는데, 키움증권에서 주식 조회 API에 한해서 무료로 제공한다는 것을 발견하였다.
이를 통해 추가 목표를 이룰 수 있을것이라고 생각한다.

키움증권의 API를 이용하려면 키움증권 계좌가 있어야하는데 계좌를 만들려면 신분증을 찍어야한다. 하지만 여기서는 카메라를 이용할 수 없으므로, 결국 API를 이용하지 못한다.
그래서 생각한 방법이 종목명과 코드를 하나의 리스트로 만들고, 크롤링 하려는 url의 코드 부분만 바꾸어서 데이터를 가져오는 방법이다.
종목이 새로 생기거나 없어진다면 리스트를 수정해야하는 번거로움이 있지만, 제한된 환경에서 할 수 있는 최선의 방법이라고 생각한다.